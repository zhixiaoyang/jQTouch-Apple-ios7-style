3.2.9 (Media Mark)
bcb4977dfec707a71edbe9b7e51651bdc78c45d7
o:Sass::Tree::RootNode
:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@has_childrenT:@options{ :@children[o:Sass::Tree::ImportNode:@imported_file0:@imported_filename"shared;0;@;	[ :
@lineio:Sass::Tree::CommentNode
:
@type:silent:@value["ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */;@;	[ ;io:Sass::Tree::VariableNode:@guarded"!default:
@expro:Sass::Script::String	;:identifier;"all;@;i;@;	[ :
@name" default-transition-property;io;;"!default;o:Sass::Script::Number:@denominator_units[ :@numerator_units["s;i;@:@original"1s;i;@;	[ ;" default-transition-duration;io;;"!default;o:Sass::Script::Bool;F;@;i;@;	[ ;" default-transition-function;io;;"!default;o;;F;@;i;@;	[ ;"default-transition-delay;io;;"!default;o:Sass::Script::List	;[o;	;;;"transform;@;io;	;;;"transform-origin;@;i;@;i:@separator:
comma;@;	[ ;"#transitionable-prefixed-values;io;
;;;["}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;@;	[ ;i!o:Sass::Tree::MixinDefNode;T:
@args[[o:Sass::Script::Variable;@;"property-1:@underscored_name"property_1o;"	;@;" default-transition-property;i&;#" default_transition_property[o;";@;"property-2;#"property_2o;;F;@;i'[o;";@;"property-3;#"property_3o;;F;@;i([o;";@;"property-4;#"property_4o;;F;@;i)[o;";@;"property-5;#"property_5o;;F;@;i*[o;";@;"property-6;#"property_6o;;F;@;i+[o;";@;"property-7;#"property_7o;;F;@;i,[o;";@;"property-8;#"property_8o;;F;@;i-[o;";@;"property-9;#"property_9o;;F;@;i.[o;";@;"property-10;#"property_10o;;F;@;i/;@;	[u:Sass::Tree::IfNodeÙ[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:@keywords{ :
@args[o:Sass::Script::Variable	:@options{ :
@name"property-1:
@linei1:@underscored_name"property_1;@:@splat0;"type-of;i1:@operator:eq;@:@operand2o:Sass::Script::String	:
@type:identifier:@value"string;@;i1;i10[o:Sass::Tree::VariableNode:@guarded0:
@expro;;{ ;	[o;
	;@;"property-1;i1;"property_1;@;0;"unquote;i1;@:@children[ ;"property-1;i1o;;0;o:Sass::Script::Funcall:@keywords{ ;![o;"	;@;"property-1;i2;#"property_1o;"	;@;"property-2;i2;#"property_2o;"	;@;"property-3;i2;#"property_3o;"	;@;"property-4;i2;#"property_4o;"	;@;"property-5;i2;#"property_5o;"	;@;"property-6;i2;#"property_6o;"	;@;"property-7;i2;#"property_7o;"	;@;"property-8;i2;#"property_8o;"	;@;"property-9;i2;#"property_9o;"	;@;"property-10;i2;#"property_10;@:@splat0;"compact;i2;@;	[ ;"properties;i2u;$Å[o:Sass::Script::Variable	:@options{ :
@name"$experimental-support-for-webkit:
@linei3:@underscored_name"$experimental_support_for_webkit0[o:Sass::Tree::PropNode:@valueo:Sass::Script::Funcall:@keywords{ :
@args[o:Sass::Script::String	:
@type:identifier;"-webkit;@;i3o; 	;@;"properties;i3;	"properties;@:@splat0;"prefixed-for-transition;i3:@prop_syntax:new;@:
@tabsi :@children[ ;[" -webkit-transition-property;i3u;$Á[o:Sass::Script::Variable	:@options{ :
@name"%experimental-support-for-mozilla:
@linei4:@underscored_name"%experimental_support_for_mozilla0[o:Sass::Tree::PropNode:@valueo:Sass::Script::Funcall:@keywords{ :
@args[o:Sass::Script::String	:
@type:identifier;"	-moz;@;i4o; 	;@;"properties;i4;	"properties;@:@splat0;"prefixed-for-transition;i4:@prop_syntax:new;@:
@tabsi :@children[ ;["-moz-transition-property;i4u;$¹[o:Sass::Script::Variable	:@options{ :
@name"#experimental-support-for-opera:
@linei5:@underscored_name"#experimental_support_for_opera0[o:Sass::Tree::PropNode:@valueo:Sass::Script::Funcall:@keywords{ :
@args[o:Sass::Script::String	:
@type:identifier;"-o;@;i5o; 	;@;"properties;i5;	"properties;@:@splat0;"prefixed-for-transition;i5:@prop_syntax:new;@:
@tabsi :@children[ ;["-o-transition-property;i5o:Sass::Tree::PropNode;o;"	;@;"properties;i6;#"properties:@prop_syntax:new;@:
@tabsi ;	[ ;["transition-property;i6;'0;"transition-property;i0o;
;;;["¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;@;	[ ;i9o; ;T;![[o;";@;"duration-1;#"duration_1o;"	;@;" default-transition-duration;i>;#" default_transition_duration[o;";@;"duration-2;#"duration_2o;;F;@;i?[o;";@;"duration-3;#"duration_3o;;F;@;i@[o;";@;"duration-4;#"duration_4o;;F;@;iA[o;";@;"duration-5;#"duration_5o;;F;@;iB[o;";@;"duration-6;#"duration_6o;;F;@;iC[o;";@;"duration-7;#"duration_7o;;F;@;iD[o;";@;"duration-8;#"duration_8o;;F;@;iE[o;";@;"duration-9;#"duration_9o;;F;@;iF[o;";@;"duration-10;#"duration_10o;;F;@;iG;@;	[u;$Ù[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:@keywords{ :
@args[o:Sass::Script::Variable	:@options{ :
@name"duration-1:
@lineiI:@underscored_name"duration_1;@:@splat0;"type-of;iI:@operator:eq;@:@operand2o:Sass::Script::String	:
@type:identifier:@value"string;@;iI;iI0[o:Sass::Tree::VariableNode:@guarded0:
@expro;;{ ;	[o;
	;@;"duration-1;iI;"duration_1;@;0;"unquote;iI;@:@children[ ;"duration-1;iIo;;0;o;%;&{ ;![o;"	;@;"duration-1;iJ;#"duration_1o;"	;@;"duration-2;iJ;#"duration_2o;"	;@;"duration-3;iJ;#"duration_3o;"	;@;"duration-4;iJ;#"duration_4o;"	;@;"duration-5;iJ;#"duration_5o;"	;@;"duration-6;iJ;#"duration_6o;"	;@;"duration-7;iJ;#"duration_7o;"	;@;"duration-8;iJ;#"duration_8o;"	;@;"duration-9;iJ;#"duration_9o;"	;@;"duration-10;iJ;#"duration_10;@;'0;"compact;iJ;@;	[ ;"durations;iJo:Sass::Tree::MixinNode;&{ ;![o;	;;;"transition-duration;@;iKo;"	;@;"durations;iK;#"durationso;	;;;"	-moz;@;iLo;	;;;"-webkit;@;iLo;	;;;"-o;@;iLo:!Sass::Script::UnaryOperation	:@operando;	;;;"-ms;@;iL:@operator:not;@;iLo;-	;.o;	;;;"-khtml;@;iL;/;0;@;iLo;	;;;"official;@;iL;@;	[ ;'0;"experimental;iM;'0;"transition-duration;iHo;
;;;["õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;@;	[ ;iPo; ;T;![[o;";@;"function-1;#"function_1o;"	;@;" default-transition-function;iV;#" default_transition_function[o;";@;"function-2;#"function_2o;;F;@;iW[o;";@;"function-3;#"function_3o;;F;@;iX[o;";@;"function-4;#"function_4o;;F;@;iY[o;";@;"function-5;#"function_5o;;F;@;iZ[o;";@;"function-6;#"function_6o;;F;@;i[[o;";@;"function-7;#"function_7o;;F;@;i\[o;";@;"function-8;#"function_8o;;F;@;i][o;";@;"function-9;#"function_9o;;F;@;i^[o;";@;"function-10;#"function_10o;;F;@;i_;@;	[o;;0;o;%;&{ ;![o;"	;@;"function-1;ia;#"function_1;@;'0;"unquote;ia;@;	[ ;"function-1;iao;;0;o;%;&{ ;![o;"	;@;"function-1;ib;#"function_1o;"	;@;"function-2;ib;#"function_2o;"	;@;"function-3;ib;#"function_3o;"	;@;"function-4;ib;#"function_4o;"	;@;"function-5;ib;#"function_5o;"	;@;"function-6;ib;#"function_6o;"	;@;"function-7;ib;#"function_7o;"	;@;"function-8;ib;#"function_8o;"	;@;"function-9;ib;#"function_9o;"	;@;"function-10;ib;#"function_10;@;'0;"compact;ib;@;	[ ;"functions;ibo;,;&{ ;![o;	;;;"transition-timing-function;@;ico;"	;@;"functions;ic;#"functionso;	;;;"	-moz;@;ido;	;;;"-webkit;@;ido;	;;;"-o;@;ido;-	;.o;	;;;"-ms;@;id;/;0;@;ido;-	;.o;	;;;"-khtml;@;id;/;0;@;ido;	;;;"official;@;id;@;	[ ;'0;"experimental;ie;'0;"transition-timing-function;i`o;
;;;["¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;@;	[ ;iho; ;T;![[o;";@;"delay-1;#"delay_1o;"	;@;"default-transition-delay;im;#"default_transition_delay[o;";@;"delay-2;#"delay_2o;;F;@;in[o;";@;"delay-3;#"delay_3o;;F;@;io[o;";@;"delay-4;#"delay_4o;;F;@;ip[o;";@;"delay-5;#"delay_5o;;F;@;iq[o;";@;"delay-6;#"delay_6o;;F;@;ir[o;";@;"delay-7;#"delay_7o;;F;@;is[o;";@;"delay-8;#"delay_8o;;F;@;it[o;";@;"delay-9;#"delay_9o;;F;@;iu[o;";@;"delay-10;#"delay_10o;;F;@;iv;@;	[u;$Ê[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:@keywords{ :
@args[o:Sass::Script::Variable	:@options{ :
@name"delay-1:
@lineix:@underscored_name"delay_1;@:@splat0;"type-of;ix:@operator:eq;@:@operand2o:Sass::Script::String	:
@type:identifier:@value"string;@;ix;ix0[o:Sass::Tree::VariableNode:@guarded0:
@expro;;{ ;	[o;
	;@;"delay-1;ix;"delay_1;@;0;"unquote;ix;@:@children[ ;"delay-1;ixo;;0;o;%;&{ ;![o;"	;@;"delay-1;iy;#"delay_1o;"	;@;"delay-2;iy;#"delay_2o;"	;@;"delay-3;iy;#"delay_3o;"	;@;"delay-4;iy;#"delay_4o;"	;@;"delay-5;iy;#"delay_5o;"	;@;"delay-6;iy;#"delay_6o;"	;@;"delay-7;iy;#"delay_7o;"	;@;"delay-8;iy;#"delay_8o;"	;@;"delay-9;iy;#"delay_9o;"	;@;"delay-10;iy;#"delay_10;@;'0;"compact;iy;@;	[ ;"delays;iyo;,;&{ ;![o;	;;;"transition-delay;@;izo;"	;@;"delays;iz;#"delayso;	;;;"	-moz;@;i{o;	;;;"-webkit;@;i{o;	;;;"-o;@;i{o;-	;.o;	;;;"-ms;@;i{;/;0;@;i{o;-	;.o;	;;;"-khtml;@;i{;/;0;@;i{o;	;;;"official;@;i{;@;	[ ;'0;"experimental;i|;'0;"transition-delay;iwo;
;;;["*/* Transition all-in-one shorthand */;@;	[ ;io; ;T;![	[o;";@;"property;#"propertyo;"	;@;" default-transition-property;i};#" default_transition_property[o;";@;"duration;#"durationo;"	;@;" default-transition-duration;i~;#" default_transition_duration[o;";@;"function;#"functiono;"	;@;" default-transition-function;i;#" default_transition_function[o;";@;"
delay;#"
delayo;"	;@;"default-transition-delay;i;#"default_transition_delay;@;	[o;,;&{ ;![o;%;&{ ;![o;	;[	o;"	;@;"property;i;#"propertyo;"	;@;"duration;i;#"durationo;"	;@;"function;i;#"functiono;"	;@;"
delay;i;#"
delay;@;i;:
space;@;'0;"compact;i;@;	[ ;'0;"transition;i;'0;"single-transition;io; ;T;![[o;";@;"transition-1;#"transition_1o;	;;;"default;@;i[o;";@;"transition-2;#"transition_2o;;F;@;i[o;";@;"transition-3;#"transition_3o;;F;@;i[o;";@;"transition-4;#"transition_4o;;F;@;i[o;";@;"transition-5;#"transition_5o;;F;@;i[o;";@;"transition-6;#"transition_6o;;F;@;i[o;";@;"transition-7;#"transition_7o;;F;@;i[o;";@;"transition-8;#"transition_8o;;F;@;i[o;";@;"transition-9;#"transition_9o;;F;@;i[o;";@;"transition-10;#"transition_10o;;F;@;i;@;	[u;$÷[o:Sass::Script::Operation
:@operand1o:Sass::Script::Variable	:@options{ :
@name"transition-1:
@linei:@underscored_name"transition_1:@operator:eq;@:@operand2o:Sass::Script::String	:
@type:identifier:@value"default;@;
i;
i0[o:Sass::Tree::VariableNode:@guarded0:
@expro:Sass::Script::Funcall:@keywords{ :
@args[o:Sass::Script::List	;[	o;	;@;	" default-transition-property;
i;" default_transition_propertyo;	;@;	" default-transition-duration;
i;" default_transition_durationo;	;@;	" default-transition-function;
i;" default_transition_functiono;	;@;	"default-transition-delay;
i;"default_transition_delay;@;
i:@separator:
space;@:@splat0;	"compact;
i;@:@children[ ;	"transition-1;
io;;0;o;;F;@;i;@;	[ ;"transitions;iu;$[o:Sass::Script::Operation
:@operand1o; 
;o:Sass::Script::Funcall:@keywords{ :
@args[o:Sass::Script::Variable	:@options{ :
@name"transition-1:
@linei:@underscored_name"transition_1;@:@splat0;"type-of;i:@operator:eq;@:@operand2o:Sass::Script::String	:
@type:identifier:@value"	list;@;i;i;:and;@;o; 
;o;;{ ;	[o;;{ ;	[o;
	;@;"transition-1;i;"transition_1o:Sass::Script::Number:@denominator_units[ :@numerator_units[ ;i;@:@original"1;i;@;0;"nth;i;@;0;"type-of;i;;;@;o;	;;;"	list;@;i;i;iu:Sass::Tree::IfNode¤[00[o:Sass::Tree::VariableNode:@guarded0:
@expro:Sass::Script::Funcall:@keywords{ :
@args[o:Sass::Script::Variable	:@options{ :
@name"transition-1:
@linei:@underscored_name"transition_1o;	;@;"transition-2;i;"transition_2o;	;@;"transition-3;i;"transition_3o;	;@;"transition-4;i;"transition_4o;	;@;"transition-5;i;"transition_5o;	;@;"transition-6;i;"transition_6o;	;@;"transition-7;i;"transition_7o;	;@;"transition-8;i;"transition_8o;	;@;"transition-9;i;"transition_9o;	;@;"transition-10;i;"transition_10;@:@splat0;"compact;i;@:@children[ ;"transitions;i[o:Sass::Tree::VariableNode:@guarded0:
@expro;;{ ;	[o;
	;@;"transition-1;i;"transition_1o;;{ ;	[o;
	;@;"transition-2;i;"transition_2o;
	;@;"transition-3;i;"transition_3o;
	;@;"transition-4;i;"transition_4o;
	;@;"transition-5;i;"transition_5o;
	;@;"transition-6;i;"transition_6o;
	;@;"transition-7;i;"transition_7o;
	;@;"transition-8;i;"transition_8o;
	;@;"transition-9;i;"transition_9o;
	;@;"transition-10;i;"transition_10;@;0;"compact;io;	;;;"
comma;@;i;@;0;"	join;i;@:@children[ ;"transitions;io;;0;o;%;&{ ;![ ;@;'0;"comma-list;i;@;	[ ;"delays;io;;0;o;;F;@;i;@;	[ ;"has-delays;io;;0;o;%;&{ ;![ ;@;'0;"comma-list;i;@;	[ ;"webkit-value;io;;0;o;%;&{ ;![ ;@;'0;"comma-list;i;@;	[ ;"moz-value;io;;0;o;%;&{ ;![ ;@;'0;"comma-list;i;@;	[ ;"o-value;io;
;;;["/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;@;	[ ;i o:Sass::Tree::EachNode;T;@:	@var"transition;	[o;
;;;["}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;@;	[ ;i£o;;0;o;%;&{ ;![o;"	;@;"transition;i¥;#"transitiono;;[ ;[ ;i;@;"1;i¥;@;'0;"nth;i¥;@;	[ ;"property;i¥o;;0;o;;F;@;i¦;@;	[ ;"duration;i¦o;;0;o;;F;@;i§;@;	[ ;"timing-function;i§o;;0;o;;F;@;i¨;@;	[ ;"
delay;i¨u;$[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:@keywords{ :
@args[o:Sass::Script::Variable	:@options{ :
@name"transition:
@linei©:@underscored_name"transition;@:@splat0;"length;i©:@operator:gt;@:@operand2o:Sass::Script::Number:@denominator_units[ :@numerator_units[ :@valuei;@:@original"1;i©;i©0[o:Sass::Tree::VariableNode:@guarded0:
@expro;;{ ;	[o;
	;@;"transition;i©;"transitiono;;@;[ ;i;@;"2;i©;@;0;"nth;i©;@:@children[ ;"duration;i©u;$[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:@keywords{ :
@args[o:Sass::Script::Variable	:@options{ :
@name"transition:
@lineiª:@underscored_name"transition;@:@splat0;"length;iª:@operator:gt;@:@operand2o:Sass::Script::Number:@denominator_units[ :@numerator_units[ :@valuei;@:@original"2;iª;iª0[o:Sass::Tree::VariableNode:@guarded0:
@expro;;{ ;	[o;
	;@;"transition;iª;"transitiono;;@;[ ;i;@;"3;iª;@;0;"nth;iª;@:@children[ ;"timing-function;iªu;$Y[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:@keywords{ :
@args[o:Sass::Script::Variable	:@options{ :
@name"transition:
@linei«:@underscored_name"transition;@:@splat0;"length;i«:@operator:gt;@:@operand2o:Sass::Script::Number:@denominator_units[ :@numerator_units[ :@valuei;@:@original"3;i«;i«0[o:Sass::Tree::VariableNode:@guarded0:
@expro;;{ ;	[o;
	;@;"transition;i«;"transitiono;;@;[ ;i	;@;"4;i«;@;0;"nth;i«;@:@children[ ;"
delay;i«o;;0;o:Sass::Script::Bool;T;@;i«;@;[ ;"has-delays;i«o;
;;;[";/* If a delay is provided without a timing function */;@;	[ ;i­u;$g[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:@keywords{ :
@args[o:Sass::Script::Variable	:@options{ :
@name"timing-function:
@linei®:@underscored_name"timing_function;@:@splat0;"is-time;i®:@operator:and;@:@operand2o:!Sass::Script::UnaryOperation	:@operando;
	;@;"
delay;i®;"
delay;:not;@;i®;i®0[o:Sass::Tree::VariableNode:@guarded0:
@expro;
	;@;"timing-function;i®;"timing_function;@:@children[ ;"
delay;i®o;;0;o:Sass::Script::Bool:@valueF;@;i®;@;[ ;"timing-function;i®o;;0;o;;T;@;i®;@;[ ;"has-delays;i®o;
;;;["9/* Keep a list of delays in case one is specified */;@;	[ ;i°o;;0;o;%;&{ ;![o;"	;@;"delays;i±;#"delayso;%;&{ ;![o;"	;@;"
delay;i±;#"
delayo;"	;@;"
delay;i±;#"
delayo;;[ ;["s;i ;@;"0s;i±;@;'0;"if;i±;@;'0;"append;i±;@;	[ ;"delays;i±o;;0;o;%;&{ ;![o;"	;@;"webkit-value;i³;#"webkit_valueo;%;&{ ;![o;	;[o;%;&{ ;![o;	;;;"-webkit;@;i³o;"	;@;"property;i³;#"property;@;'0;"prefixed-for-transition;i³o;"	;@;"duration;i³;#"durationo;"	;@;"timing-function;i³;#"timing_function;@;i³;;1;@;'0;"compact;i³;@;'0;"append;i³;@;	[ ;"webkit-value;i³o;;0;o;%;&{ ;![o;"	;@;"moz-value;i´;#"moz_valueo;%;&{ ;![o;	;[	o;%;&{ ;![o;	;;;"	-moz;@;i´o;"	;@;"property;i´;#"property;@;'0;"prefixed-for-transition;i´o;"	;@;"duration;i´;#"durationo;"	;@;"timing-function;i´;#"timing_functiono;"	;@;"
delay;i´;#"
delay;@;i´;;1;@;'0;"compact;i´;@;'0;"append;i´;@;	[ ;"moz-value;i´o;;0;o;%;&{ ;![o;"	;@;"o-value;iµ;#"o_valueo;%;&{ ;![o;	;[	o;%;&{ ;![o;	;;;"-o;@;iµo;"	;@;"property;iµ;#"property;@;'0;"prefixed-for-transition;iµo;"	;@;"duration;iµ;#"durationo;"	;@;"timing-function;iµ;#"timing_functiono;"	;@;"
delay;iµ;#"
delay;@;iµ;;1;@;'0;"compact;iµ;@;'0;"append;iµ;@;	[ ;"o-value;iµ;i¢:
@listo;"	;@;"transitions;i¢;#"transitionsu;$Ý[o:Sass::Script::Variable	:@options{ :
@name"$experimental-support-for-webkit:
@linei¸:@underscored_name"$experimental_support_for_webkit0[o:Sass::Tree::PropNode:@valueo; 	;@;"webkit-value;i¸;	"webkit_value:@prop_syntax:new;@:
@tabsi :@children[ ;["-webkit-transition;i¸o:Sass::Tree::CommentNode
:
@type:silent;["j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */;@;[ ;i¹u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:@options{ :
@name"has-delays:
@lineiº:@underscored_name"has_delays0[o:Sass::Tree::PropNode:@valueo; 	;@;"delays;iº;	"delays:@prop_syntax:new;@:
@tabsi :@children[ ;["-webkit-transition-delay;iºu;$#[o:Sass::Script::Variable	:@options{ :
@name"%experimental-support-for-mozilla:
@linei»:@underscored_name"%experimental_support_for_mozilla0[o:Sass::Tree::PropNode:@valueo; 	;@;"moz-value;i»;	"moz_value:@prop_syntax:new;@:
@tabsi :@children[ ;["-moz-transition;i»u;$[o:Sass::Script::Variable	:@options{ :
@name"#experimental-support-for-opera:
@linei¼:@underscored_name"#experimental_support_for_opera0[o:Sass::Tree::PropNode:@valueo; 	;@;"o-value;i¼;	"o_value:@prop_syntax:new;@:
@tabsi :@children[ ;["-o-transition;i¼o;(;o;"	;@;"transitions;i½;#"transitions;);*;@;+i ;	[ ;["transition;i½;'0;"transition;io;
;;;["Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;@;	[ ;iÀo:Sass::Tree::FunctionNode;T;![[o;";@;"	list;#"	listo;	;[ ;@;iÁ;;1;@;	[o:Sass::Tree::ReturnNode	;o;%;&{ ;![o;	;[ ;@;iÂ;;1o;"	;@;"	list;iÂ;#"	listo;	;;;"
comma;@;iÂ;@;'0;"	join;iÂ;@;	[ ;iÂ;'0;"comma-list;iÁo;
;;;["i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;@;	[ ;iÅo;5;T;![[o;";@;"prefix;#"prefix0[o;";@;"property;#"property0;@;	[u;$®[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:@keywords{ :
@args[o:Sass::Script::Variable	:@options{ :
@name"property:
@lineiÇ:@underscored_name"property;@:@splat0;"type-of;iÇ:@operator:eq;@:@operand2o:Sass::Script::String	:
@type:identifier:@value"	list;@;iÇ;iÇu:Sass::Tree::IfNodeY[00[u:Sass::Tree::IfNode9[o:Sass::Script::Funcall:@keywords{ :
@args[o:Sass::Script::Variable	:@options{ :
@name"#transitionable-prefixed-values:
@lineiÎ:@underscored_name"#transitionable_prefixed_valueso;	;	@
;
"property;iÎ;"property;	@
:@splat0;
"
index;iÎu:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Variable	:@options{ :
@name"property:
@lineiÑ:@underscored_name"property;@	:@children[ ;
iÑ[o:Sass::Tree::ReturnNode	:
@expro: Sass::Script::Interpolation:@whitespace_after0:@before0:@whitespace_beforei:@aftero;;0;o;;F;0;0;0;	@
:@originally_text:originally_text;iÏ:	@mido:Sass::Script::String	:
@type:identifier:@value"-;	@
;iÏ;0;0;	@
;F;iÏ;o;	;	@
;
"property;iÏ;"property;	@
;F;iÏ;o;	;	@
;
"prefix;iÏ;"prefix;	@
:@children[ ;iÏ[o:Sass::Tree::VariableNode:@guarded0:
@expro;;{ ;	[ ;@;0;"comma-list;iÈ;@:@children[ ;"new-list;iÈo:Sass::Tree::EachNode:@has_childrenT;@:	@var"v;[o;;0;o;;{ ;	[o;
	;@;"new-list;iÊ;"new_listo;;{ ;	[o;
	;@;"prefix;iÊ;"prefixo;
	;@;"v;iÊ;"v;@;0;"prefixed-for-transition;iÊ;@;0;"append;iÊ;@;[ ;"new-list;iÊ;iÉ:
@listo;
	;@;"property;iÉ;"propertyo:Sass::Tree::ReturnNode	;o;
	;@;"new-list;iÌ;"new_list;@;[ ;iÌ;'0;"prefixed-for-transition;iÆo;
;;;["7/* Checks if the value given is a unit of time. */;@;	[ ;iÖo;5;T;![[o;";@;"
value;#"
value0;@;	[u;$[o:Sass::Script::Operation
:@operand1o:Sass::Script::Funcall:@keywords{ :
@args[o:Sass::Script::Variable	:@options{ :
@name"
value:
@lineiØ:@underscored_name"
value;@:@splat0;"type-of;iØ:@operator:eq;@:@operand2o:Sass::Script::String	:
@type:identifier:@value"number;@;iØ;iØu:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Bool:@valueF:@options{ :
@lineiÛ;	@	:@children[ ;
iÛ[o:Sass::Tree::ReturnNode	:
@expro:!Sass::Script::UnaryOperation	:@operando;	;o;;{ ;	[o:Sass::Script::List	;[o;	;;;"s;@;iÙo;	;;;"ms;@;iÙ;@;iÙ:@separator:
spaceo;;{ ;	[o;
	;@;"
value;iÙ;"
value;@;0;"	unit;iÙ;@;0;"
index;iÙ;:not;@;iÙ;;;@;iÙ;@:@children[ ;iÙ;'0;"is-time;i×;i